import Joi = require('joi');

import userServices = require('../services/userServices');

module.exports = {
  login: async (req, res) => {
    try {
      const { password, email } = req.body;

      const user = await userServices.login(password, email);

      if (user.error) {
        const { error: { message } } = user;
        return res.status(400)
          .json({ message });
      }

      const jwtConfig = {
        expiresIn: '7d',
        algorithm: 'HS256',
      }; jwt.sign({ data: user }, JWT_SECRET, jwtConfig);

      res.status(200).json({ token });
    } catch (e) {
      res.status(500).json({ message: e.message });
    }
  },

  user: async (req, res, next) => {
    try {
      const { displayName, password, email, image } = req.body;
      const { error } = Joi.object({
        displayName: Joi.string().not().empty().min(8)
          .required(),
        email: Joi.string().email().not().empty()
          .required(),
        password: Joi.string().not().empty().min(6)
          .required(),
      }).validate({ displayName, password, email });

      if (error) return next(error);

      const user = await userServices.user(displayName, password, email, image);

      if (user.error) return next(user.error);

      const token = jwt.sign({ data: user }, JWT_SECRET, jwtConfig);

      res.status(201).json({ token });
    } catch (e) {
      res.status(500).json({ message: e.message });
    }
  },

  getUser: async (req, res) => {
    try {
      const users = await userServices.getUser();
      res.status(200).json(users);
    } catch (e) {
      res.status(500).json({ message: e.message });
    }
  },
  getUserByID: async (req, res, next) => {
    const { id } = req.params;
    try {
      const user = await userServices.getUserById(id);
      if (user.error) return next(user.error);
      res.status(200).json(user);
    } catch (e) {
      res.status(500).json({ message: e.message });
    }
  },

};
